/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 -T -t scene.gltf --shadows
Author: matousekfoto (https://sketchfab.com/matousekfoto)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/painting-palette-f2db9dc21de24510b14619442c133ce7
Title: Painting palette
*/

import * as THREE from "three";
import React, { useRef, forwardRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { GroupProps } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    Model_material0_0: THREE.Mesh;
    Model_material2_0: THREE.Mesh;
    Model_material1_0: THREE.Mesh;
  };
  materials: {
    material0: THREE.MeshBasicMaterial;
    material2: THREE.MeshBasicMaterial;
    material1: THREE.MeshBasicMaterial;
  };
};

export const PaintPalette = forwardRef<THREE.Group, GroupProps>(
  (props: JSX.IntrinsicElements["group"], ref) => {
    const { nodes, materials } = useGLTF(
      "/models/painting_palette/scene-transformed.glb"
    ) as GLTFResult;
    return (
      <group {...props} dispose={null} ref={ref}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Model_material0_0.geometry}
          material={materials.material0}
          rotation={[-0.717, 0, 0]}
          scale={0.256}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Model_material2_0.geometry}
          material={materials.material2}
          rotation={[-0.717, 0, 0]}
          scale={0.256}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Model_material1_0.geometry}
          material={materials.material1}
          rotation={[-0.717, 0, 0]}
          scale={0.256}
        />
      </group>
    );
  }
);

useGLTF.preload("/models/painting_palette/scene-transformed.glb");
