/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 -T -t scene.gltf --shadows
Author: Alec Huxley (https://sketchfab.com/alechuxley)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/kids-easel-e0d7dd1475df4c8bb666c1c8884fea17
Title: Kid's Easel
*/

import * as THREE from "three";
import React, { useRef, forwardRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { GroupProps } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    polySurface3_easelAccMaterial_0: THREE.Mesh;
    polySurface30_easelMaterial_0: THREE.Mesh;
  };
  materials: {
    easelAccMaterial: THREE.MeshStandardMaterial;
    easelMaterial: THREE.MeshStandardMaterial;
  };
};

export const Easel = forwardRef<THREE.Group, GroupProps>(
  (props: JSX.IntrinsicElements["group"], ref) => {
    const { nodes, materials } = useGLTF(
      "/models/kids_easel/scene-transformed.glb"
    ) as GLTFResult;
    return (
      <group {...props} dispose={null} ref={ref}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.polySurface3_easelAccMaterial_0.geometry}
          material={materials.easelAccMaterial}
          position={[0, -0.018, 0]}
          scale={0.01}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.polySurface30_easelMaterial_0.geometry}
          material={materials.easelMaterial}
          position={[0, -0.018, 0]}
          scale={0.01}
        />
        {props.children}
      </group>
    );
  }
);

useGLTF.preload("/models/kids_easel/scene-transformed.glb");
