/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 -T -t scene.gltf --shadows
Author: plaggy (https://sketchfab.com/plaggy)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/cc0-paint-brush-3-5e38a7f8f1dd44cf859b23258c471445
Title: CC0 - Paint Brush 3
*/

import * as THREE from "three";
import React, { forwardRef, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { GroupProps } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    PaintBrush3_PaintBrush3_0: THREE.Mesh;
    PaintBrush3v2_PaintBrush3v2_0: THREE.Mesh;
  };
  materials: {
    PaintBrush3: THREE.MeshStandardMaterial;
    PaintBrush3v2: THREE.MeshStandardMaterial;
  };
};

export const PaintBrush = forwardRef<THREE.Group, GroupProps>(
  (props: JSX.IntrinsicElements["group"], ref) => {
    const { nodes, materials } = useGLTF(
      "/models/paint_brush/scene-transformed.glb"
    ) as GLTFResult;
    return (
      <group {...props} dispose={null} ref={ref}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.PaintBrush3_PaintBrush3_0.geometry}
          material={materials.PaintBrush3}
          rotation={[-1.771, -0.506, -0.098]}
          scale={0.025}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.PaintBrush3v2_PaintBrush3v2_0.geometry}
          material={materials.PaintBrush3v2}
          position={[0, 0, -0.013]}
          rotation={[-1.751, -0.25, -0.045]}
          scale={0.025}
        />
      </group>
    );
  }
);

useGLTF.preload("/models/paint_brush/scene-transformed.glb");
